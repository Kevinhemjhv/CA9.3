{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\OneDrive\\\\Desktop\\\\ca9.3\\\\client\\\\src\\\\components\\\\RoundsPage.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport RoundsMode from './RoundsMode.js';\nimport RoundsTable from './RoundsTable.js';\nimport RoundForm from './RoundForm.js';\nimport FloatingButton from './FloatingButton.js';\nimport NotificationToast from './NotificationToast.js';\nimport PopUp from './PopUp.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass RoundsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.choice1TextString = \"choice1TextString\";\n    this.choice2TextString = \"choice2TextString\";\n    this.choices = [this.choice1TextString, this.choice2TextString];\n\n    this.choice1Function = () => {\n      alert(\"choice1TextString\");\n    };\n\n    this.choice2Function = () => {\n      alert(\"choice2TextString\");\n    };\n\n    this.dismiss = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.initiateEditRound = val => {\n      this.setState({\n        editId: val,\n        mode: RoundsMode.EDITROUND\n      }, this.props.toggleModalOpen);\n    };\n\n    this.initiateDeleteRound = val => {\n      this.setState({\n        deleteId: val\n      }, () => alert(\"Confirm delete goes here!\"));\n    };\n\n    this.state = {\n      mode: RoundsMode.ROUNDSTABLE,\n      deleteId: -1,\n      editId: -1,\n      message: \"test message\",\n      backgroundColor: 'secondary',\n      textColor: 'text-black',\n      show: true,\n      text: \"DEFAULT TEXT\"\n    };\n  }\n\n  render() {\n    switch (this.state.mode) {\n      case RoundsMode.ROUNDSTABLE:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RoundsTable, {\n            rounds: this.props.rounds,\n            initiateDeleteRound: this.initiateDeleteRound,\n            deleteRound: this.props.deleteRound,\n            deleteId: this.state.deleteId,\n            initiateEditRound: this.initiateEditRound,\n            updateRound: this.props.updateRound,\n            setMode: this.setMode,\n            toggleModalOpen: this.props.toggleModalOpen,\n            menuOpen: this.props.menuOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FloatingButton, {\n            icon: \"calendar\",\n            label: \"Log Round\",\n            menuOpen: this.props.menuOpen,\n            action: () => this.setState({\n              mode: RoundsMode.LOGROUND\n            }, this.props.toggleModalOpen)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true);\n\n      case RoundsMode.LOGROUND:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NotificationToast, {\n            message: this.state.message,\n            backgroundColor: this.state.backgroundColor,\n            textColor: this.state.textColor,\n            show: this.state.show,\n            dismiss: this.dismiss\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n            text: this.state.text,\n            choices: this.choices\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RoundForm, {\n            mode: this.state.mode,\n            roundData: null,\n            saveRound: this.props.addRound,\n            setMode: this.setMode,\n            toggleModalOpen: this.props.toggleModalOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this);\n\n      case RoundsMode.EDITROUND:\n        let i;\n\n        for (i = 0; i < this.props.rounds.length; ++i) {\n          if (this.props.rounds[i].roundNum === this.state.editId) {\n            break;\n          }\n        }\n\n        return /*#__PURE__*/_jsxDEV(RoundForm, {\n          mode: this.state.mode,\n          roundData: this.props.rounds[i],\n          saveRound: this.props.updateRound,\n          setMode: this.setMode,\n          toggleModalOpen: this.props.toggleModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this);\n    }\n  }\n\n}\n\nexport default RoundsPage;","map":{"version":3,"sources":["C:/Users/Kevin/OneDrive/Desktop/ca9.3/client/src/components/RoundsPage.js"],"names":["React","FontAwesomeIcon","RoundsMode","RoundsTable","RoundForm","FloatingButton","NotificationToast","PopUp","RoundsPage","Component","constructor","props","choice1TextString","choice2TextString","choices","choice1Function","alert","choice2Function","dismiss","setState","show","initiateEditRound","val","editId","mode","EDITROUND","toggleModalOpen","initiateDeleteRound","deleteId","state","ROUNDSTABLE","message","backgroundColor","textColor","text","render","rounds","deleteRound","updateRound","setMode","menuOpen","LOGROUND","addRound","i","length","roundNum"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundsMode  from './RoundsMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js'\r\nimport NotificationToast from './NotificationToast.js'\r\nimport PopUp from './PopUp.js'\r\n\r\nclass RoundsPage extends React.Component {\r\n    constructor(props) {\r\n            super(props);\r\n            \r\n            this.state = {mode: RoundsMode.ROUNDSTABLE,\r\n                          deleteId: -1,\r\n                          editId: -1,\r\n                          message: \"test message\",\r\n                          backgroundColor: 'secondary',\r\n                          textColor: 'text-black',\r\n                          show: true,\r\n                          text: \"DEFAULT TEXT\",\r\n                        };    \r\n\r\n                            \r\n    }\r\n\r\n            choice1TextString = \"choice1TextString\"\r\n            choice2TextString = \"choice2TextString\"\r\n            choices = [this.choice1TextString,\r\n                this.choice2TextString\r\n            ]\r\n\r\n    choice1Function= () =>\r\n    {\r\n        alert(\"choice1TextString\")\r\n    }\r\n\r\n    choice2Function= () =>\r\n    {\r\n        alert(\"choice2TextString\")\r\n    }\r\n\r\n\r\n    dismiss= () =>\r\n    {\r\n  this.setState({show: false})\r\n    }\r\n\r\n    initiateEditRound = (val) => {\r\n        this.setState({editId: val,\r\n                       mode: RoundsMode.EDITROUND}, \r\n                       this.props.toggleModalOpen);\r\n    }\r\n    \r\n    initiateDeleteRound = (val) => {\r\n        this.setState({deleteId: val},\r\n        () => alert(\"Confirm delete goes here!\"));\r\n    }\r\n\r\n    render() {\r\n        switch (this.state.mode) {\r\n        case RoundsMode.ROUNDSTABLE: \r\n            return (\r\n                <>\r\n                    <RoundsTable rounds={this.props.rounds}\r\n                                initiateDeleteRound={this.initiateDeleteRound}\r\n                                deleteRound={this.props.deleteRound} \r\n                                deleteId={this.state.deleteId}\r\n                                initiateEditRound= {this.initiateEditRound}\r\n                                updateRound= {this.props.updateRound}\r\n                                setMode={this.setMode} \r\n                                toggleModalOpen={this.props.toggleModalOpen}\r\n                                menuOpen={this.props.menuOpen} /> \r\n                    <FloatingButton\r\n                        icon=\"calendar\"\r\n                        label={\"Log Round\"}\r\n                        menuOpen={this.props.menuOpen}\r\n                        action={()=>this.setState({mode: RoundsMode.LOGROUND},\r\n                                    this.props.toggleModalOpen)} />\r\n            </>\r\n            );\r\n        case RoundsMode.LOGROUND:\r\n            \r\n            return (\r\n                <div>\r\n            <NotificationToast\r\n            message = {this.state.message}\r\n            backgroundColor = {this.state.backgroundColor}\r\n            textColor = {this.state.textColor}\r\n            show = {this.state.show}\r\n            dismiss = {this.dismiss}\r\n            />\r\n            <PopUp\r\n                text = {this.state.text}\r\n                choices = {this.choices}\r\n            />\r\n                \r\n            <RoundForm mode={this.state.mode}\r\n                    roundData={null}\r\n                    saveRound={this.props.addRound}\r\n                    setMode={this.setMode}\r\n                    toggleModalOpen={this.props.toggleModalOpen} />\r\n                    </div>\r\n            );\r\n        case RoundsMode.EDITROUND:\r\n            let i;\r\n            for (i = 0; i < this.props.rounds.length; ++i) {\r\n                if (this.props.rounds[i].roundNum === this.state.editId) {\r\n                    break;\r\n                }\r\n            }\r\n            return (\r\n            <RoundForm mode={this.state.mode}\r\n                roundData={this.props.rounds[i]}\r\n                saveRound={this.props.updateRound}\r\n                setMode={this.setMode}\r\n                toggleModalOpen={this.props.toggleModalOpen} />\r\n            );\r\n        }\r\n    }  \r\n\r\n}\r\n\r\nexport default RoundsPage;"]},"metadata":{},"sourceType":"module"}